version: '3.5'

services:
  app: &app-base
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      MILVUS_HOST: milvus
      LAZY_LOAD_EXTRACTOR_PIPELINE: "false"
      ML_MYSQL_HOST: "mysql"
      KAFKA_HOST: "3.37.151.144"
    volumes:
      - ".:/app"
    depends_on:
      - mysql
      - milvus
      - kafka
    command: ./run.sh

  streamlit:
    <<: *app-base
    ports:
      - "8501:8501"
    command: ./run-streamlit.sh

  activity_consumer:
    <<: *app-base
    ports:
      - "8502:8502"
    command: python app_activity_consumer.py

  etcd:
    container_name: milvus-etcd
    restart: always
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    restart: always
    image: minio/minio:RELEASE.2022-03-17T06-34-49Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    restart: always
    image: milvusdb/milvus:v2.1.1
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: always
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.2
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://3.37.151.144:9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: kurly
      MYSQL_USER: kurly
      MYSQL_PASSWORD: kurly
      MYSQL_DATABASE: kurly
    ports:
      - "3306:3306"

networks:
  default:
    name: milvus
